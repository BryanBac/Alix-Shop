import Bar from "@/components/bar";
import { useState, useEffect } from "react";
import Head from 'next/head'
import styles from '@/styles/Configuracion.module.css'
import modificarDocumento from "./api/firebase/update-data";
import enviar from "./api/firebase/post-data";
import obtener from "./api/firebase/get-data";
import hashPassword from "./api/auth/hash";
import MensajeModal from "@/components/popup/MensajeModal";
import ModalPopUp from "@/components/popup/popup";
import TablaUsuarios from "@/components/tablaUsuarios";

export default function Configuracion() {
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [contador, setContador] = useState([])
  const [usuarios, setUsuarios] = useState([])
  const [actualizar, setActualizar] = useState(false)
  const [usuario, setUsuario] = useState("")
  const [password, setPassword] = useState("")
  const [openPopUp, setOpenPopUp] = useState(false)

  const cambiarPedido = () => {
    modificarDocumento(process.env.NEXT_PUBLIC_CONTADOR_ID, "contadorPedido", {
      contador: Number(contador),
      id: process.env.NEXT_PUBLIC_CONTADOR_ID
    })
  }

  const crearUsuario = () => {
    enviar("usuarios", {
      usuario: usuario,
      password: hashPassword(password),
      tipo: 1
    }).then(()=>{
      setUsuario("")
      setPassword("")
      setOpenPopUp(true)
      setActualizar(!actualizar)
    })
  }
  
  const fetchData = async () => {
    try {
      const result = await obtener("usuarios");
      setUsuarios(result)
    } catch (error) {
      // Handle the error if needed
      console.error("Error fetching data:", error);
    }
  };
  useEffect(()=>{
    fetchData()
  },[])
  
  useEffect(()=>{
    if(actualizar){
      fetchData()
      setActualizar(false)
    }
  },[actualizar])

  return (
    <>
      <Head>
        <title>Alix Shop</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/Logo.ico" />
      </Head>
      <Bar isDarkMode={isDarkMode} setIsDarkMode={setIsDarkMode}></Bar>
      <ModalPopUp
        openPopUp={openPopUp}
        setOpenPopUp={setOpenPopUp}
      >
        <MensajeModal mensaje="Usuario Creado"></MensajeModal>
      </ModalPopUp>
      <div className={styles.superContainer}>
        <div className={styles.container}>
          <div>
            <div className={styles.inputC}>
              <div className={styles.square1}><div>Numero de Pedido</div></div>
              <div className={styles.square2}>
                <textarea type="text" className={styles.inp} onChange={(e) => setContador(e.target.value)} value={contador}>
                </textarea>
              </div>
              <div className={styles.buttonC}>
                <button className={styles.button} onClick={() => cambiarPedido()}>Cambiar Numero de Pedido</button>
              </div>
            </div>
          </div>
          <div className={styles.gridUser}>
            <div className={styles.inputC2}>
              <div className={styles.square1}><div>Usuario</div></div>
              <div className={styles.square2}>
                <textarea type="text" className={styles.inp} onChange={(e) => setUsuario(e.target.value)} value={usuario}>
                </textarea>
              </div>
            </div>
            <div className={styles.inputC2}>
              <div className={styles.square1}><div>Contrase√±a</div></div>
              <div className={styles.square2}>
                <textarea type="text" className={styles.inp} onChange={(e) => setPassword(e.target.value)} value={password}>
                </textarea>
              </div>
            </div>
          </div>
          <div className={styles.containerButton}>
            <div className={styles.buttonC}>
              <button className={styles.button} onClick={() => crearUsuario()}>Crear usuario</button>
            </div>
          </div>
          <div className={styles.containerButton}>
            <TablaUsuarios data={usuarios} setActualizado={setActualizar}></TablaUsuarios>
          </div>
        </div>
      </div>
    </>
  )
}